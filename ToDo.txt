There 'should' be no bugs or 'clean-ups', before moving to the next 'step'. or releasing a new version.
The objects can be added at anytime. But be aware there could be changes that will brake objects.

####BUGS####
Find better input library!!

####Clean-Ups#### <Make things orderly and comment things. (Split up big files, Use regions, Simplify code.)
Make sure plugins can be connected to plugins that they should beable to connect to.
	MIDI is done.
	Need to check input, math, fgCounter
	Need some sort of plugins to convert to/from 0-1Normalized maybe just multiplucation and devision plugins?

May want to remove code to load old fgs files. (SimpleD v1.1 broke loading old ones anyways.)


Step#1
	
Step#2

Step#3
	Compile saved config file with plugins. as a single (.exe or .dll)    (with a option to disable all GUI)
		Work on getting objects to compile with no UI.
	
	Tooltip regions.  Would allow controls or rectangles. e.g.
		Tooltip.Add(textbox1, "Add some text.") 'Returns index.
		Tooltip.Update(Index#,textbox1, Optional text)
		Tooltip.Remove(Index#)
	
	fgs source. A button that would show a window with the fgs contents and could be chaged.

	Handle unhandled exceptions. :P
		http://www.codeproject.com/KB/dotnet/unhandledexceptions.aspx
		http://www.codeproject.com/KB/exception/ExceptionHandling.aspx
		http://www.codeproject.com/KB/exception/SafeForm.aspx

Step#GUI
	Movement. (Should just need to put objects in an image or something.)

	New lines!!!
		Need a better way to do colors. Or at lest a command line to disable colors.


Step#4
	Folders (Allow you to put objects in folders.)
			Each folder would have one input(As Object) and one output(As Object).
				Or maybe spefiy the input object and output object.  The folder would then have the inputs of the input object and the outputs from the output object.


Objects to add:
	Math:
		Minus
		Round
		Multiply
		Divide

	Logic:
		Equals	In(Object1,Object2)		Out(Equals as Boolean)
		Numbers:
			Greater Then
			Less Than
			Greater Than or equal to
			Less Than or equal to 

	Misc:
		Get variable from object.
			Need to do some more research/testing on this: 
				Objects(#).GetType.GetField("FieldName")
				Objects(#).GetType.GetProperty("PropertyName")
				



	Input:
		Keyboard:	In(Enabled, Tick)	Out(Keyboard state, Down)
		Mouse:		In(Enabled, Tick)	Out(Position, DownButtons, UpButtons)
		Joystick:	In(Enabled, Tick, Joystick ID) Out(Joystick state)
		InputHandler: In(Input)		Out(InputState, Axis, IsPressed)

	Output:
		Really need more then just HID output. (I know currently there is just MIDI.)


	MIDI:
		Filter objects: In(Enabled,ChannelMessage)	Out(Filtered,Other)
		Debug	Need debugging for other events.
		Input:
			Add a check box to 'fix' controller events. (Mainly note On and Off.)

		Keyboard:
			Add a check box to disable other channel colors.
		
		Equalizer: Allow you to easily set each notes volume, or a group of notes like every 8 notes get a slider.
		More adv get note: GetNoteLowerThen GetNoteHeigherThen GetNoteInbetwen
		Match channels: Try to match channels so you could say turn up the user volume.
		
		Some sort of MIDI file player. (It was included in Sanford's MIDI library, just needs to be added to a object.)
