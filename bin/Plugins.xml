<?xml version="1.0"?>
<doc>
<assembly>
<name>
Plugins
</name>
</assembly>
<members>
<member name="M:Plugins.SimpleD.SimpleD.#ctor(System.String,System.Boolean)">
	<summary>
 Load from string.
 </summary>
	<param name="Data"></param>
	<param name="FromFile">If set to true then it will load from the file specfied in data</param>
	<remarks></remarks>
</member><member name="M:Plugins.SimpleD.SimpleD.Create_Group(System.String)">
	<summary>
 Create a group.
 Will return other group if names match.
 </summary>
	<param name="Name">The name of the group.</param>
</member><member name="M:Plugins.SimpleD.SimpleD.ToString(System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="SplitWithNewLine">Split propertys and groups using a newline?</param>
	<param name="SplitWithTabs">Split propertys and groups using tabs?
 Does not use tabs if newline is disabled.</param>
</member><member name="M:Plugins.SimpleD.SimpleD.FromFile(System.String)">
	<summary>
 Load the SimpleData from a file.
 </summary>
	<param name="File"></param>
	<returns>True if loaded false if not.</returns>
	<remarks></remarks>
</member><member name="M:Plugins.SimpleD.Group.Create_Group(System.String)">
	<summary>
 Create a group.
 Will return other group if names match.
 </summary>
	<param name="Name">The name of the group.</param>
</member><member name="M:Plugins.SimpleD.Group.Combine(Plugins.SimpleD.Group)">
	<summary>
 Conbines the group with this group.
 </summary>
	<param name="Group">Overides all the propertys with the propertys in the group.</param>
</member><member name="M:Plugins.SimpleD.Group.Set_Value(System.String,System.String)">
	<summary>
 This sets the value of a property.
 If it can not find the property it creates it.
 </summary>
</member><member name="M:Plugins.SimpleD.Group.Set_Value(System.String,System.String,System.String)">
	<summary>
 This sets the value of a property.
 If it can not find the property it creates it.
 Does not create if value is eaqual to devault value.
 </summary>
</member><member name="M:Plugins.SimpleD.Group.Set_Value(System.Windows.Forms.Control)">
	<summary>
 This sets the value of a property.
 If it can not find the property it creates it.
 </summary>
</member><member name="M:Plugins.SimpleD.Group.Get_Value(System.String)">
	<summary>
 Get the value from a property.
 </summary>
	<param name="Name">The name of the property to get the value from.</param>
</member><member name="M:Plugins.SimpleD.Group.Get_Value(System.String,System.Object@,System.Boolean)">
	<summary>
 Will not get value if no value found.
 </summary>
	<param name="Name"></param>
	<param name="Value"></param>
	<param name="EmptyIfNotFound">Set value to nothing, if it can't find the property.</param>
</member><member name="M:Plugins.SimpleD.Group.Get_Value(System.Windows.Forms.Control@,System.String@)">
	<summary>
 Sets the value of the control to the proprety with the same name.
 Known controls: TextBox,Label,CheckBox,RadioButton,NumericUpDown,NumericUpDownAcceleration,ProgressBar
 </summary>
	<param name="Control">The control to get the property from.</param>
	<param name="Value">Returns value if control is unknown.</param>
</member><member name="M:Plugins.SimpleD.Group.Get_Value(System.Windows.Forms.Control)">
	<summary>
 Uses the name of the control to find the property value.
 </summary>
	<param name="Control"></param>
	<returns>Property value.</returns>
</member><member name="M:Plugins.SimpleD.Group.GetValueFromObject(System.Object)">
	<summary>
 Retuns "Could_Not_Find_Value" if it can not find the value.
 </summary>
	<param name="Obj"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Plugins.SimpleD.Group.Find(System.String)">
	<summary>
 Find a property from the name.
 </summary>
	<param name="Name">The name of the property.</param>
	<returns>The property.</returns>
</member><member name="M:Plugins.SimpleD.Group.ToString(System.Boolean,System.Int32)">
	<summary>
	</summary>
	<param name="SplitWithNewLine">Split propertys and groups using a newline?</param>
	<param name="TabCount">Split propertys and groups using tabs?
 Does not use tabs if newline is disabled.</param>
</member><member name="M:Plugins.Plugins.Load_Plugin(System.Windows.Forms.Control)">
	<summary>
 Loads the main plugin stuff.
 </summary>
</member><member name="M:Plugins.Plugins.DoDraw(System.Boolean)">
	<summary>
 Tells auto draw to draw when the time comes.
 </summary>
	<param name="HeighPriority">If it's a heigh priority, then it will draw as soon as possible.</param>
</member><member name="M:Plugins.Plugins.AddObject(System.String,System.Drawing.Point,System.String)">
	<summary>
 Add a new object from the class name.
 </summary>
	<param name="Name">ex: 'Plugins.fgAdd'</param>
	<param name="StartPosition">You shouldn't need help here.</param>
	<returns>-1 if not found. other wise returns object index.</returns>
	<remarks></remarks>
</member><member name="M:Plugins.Plugins.SearchForItems(System.String,System.String@,System.Boolean)">
	<summary>
 Search thru a file and fill the add object menu. With found objects.
 </summary>
	<param name="File">The file to search thru.</param>
	<param name="ObjectList">Will fill string with each line that has "AddMenuObject".
 Unlis set to "DoNotFill"</param>
	<remarks></remarks>
</member><member name="M:Plugins.MIDI_Keyboard.ReleaseNote(System.Int32)">
	<summary>
 Release note at ID
 </summary>
	<param name="ID"></param>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.Setup(System.String,System.Drawing.Point,System.Int32,System.Int32)">
	<summary>
 Create rectangles. using the position and size.
 This should AllWays be called before creating inputs/outputs.
 </summary>
	<param name="UserData">User data is not used by BaseObject, but it needs to be saved so the object will open right.</param>
	<param name="StartPosition">NOT client position.</param>
	<param name="Width">Client size</param>
	<param name="Height">Client size</param>
</member><member name="M:Plugins.BaseObject.Dispose">
	<summary>
 Distroys everything in the object.
 BaseObject just dissconnects everything.
 </summary>
</member><member name="P:Plugins.BaseObject.Title">
	<summary>
 Gets or sets the title shown on the object and the object menu.
 </summary>
</member><member name="M:Plugins.BaseObject.Load(Plugins.SimpleD.Group)">
	<summary>
 Because UserData is loaded in New. We just connect everything here.
 </summary>
	<param name="g"></param>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.Save">
	<summary>
 Creates a new group and adds Name, Position, UserData, Outputs and inputs.
 </summary>
	<returns>The new group to be used.</returns>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.Draw(System.Drawing.Graphics)">
	<summary>
 Draws the base object stuff.
 </summary>
	<param name="g"></param>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.DrawConnectors(System.Drawing.Graphics)">
	<summary>
 Draw lines connecting outputs to inputs.
 </summary>
</member><member name="M:Plugins.BaseObject.SetSize(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Set the size of the object.
 Will call Resizing.
 </summary>
	<param name="Width"></param>
	<param name="Height"></param>
	<param name="IsClientSize"></param>
</member><member name="M:Plugins.BaseObject.Resizing">
	<summary>
 Is called when the object is being resized.
 </summary>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.SetPosition(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Sets the position of the object.
 Will call Moving.
 </summary>
</member><member name="M:Plugins.BaseObject.Moving">
	<summary>
 Is called when the object is moving.
 BaseObject does not use moving.
 </summary>
</member><member name="M:Plugins.BaseObject.Receive(System.Object,Plugins.DataFlow)">
	<summary>
 Is called when a object sends to this object.
 Is Not used by BaseObject.
 </summary>
	<param name="Data"></param>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.Inputs(System.String[])">
	<summary>
 Create inputs.
 </summary>
	<param name="Names">array of strings. e.g. {"NameOfInput,Type1,Type2", "Input2"}</param>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.Outputs(System.String[])">
	<summary>
 Create outputs.
 </summary>
	<param name="Names">array of strings. e.g. {"NameOfOutput,Type1,Type2", "Output2"}</param>
</member><member name="M:Plugins.BaseObject.MenuSelected(Plugins.Menu.Node)">
	<summary>
 Is called when somthing in the menu was selected.
 BaseObject just checks if remove was selected.
 </summary>
	<param name="Result"></param>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.MouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
	<summary>
 Is called when the mouse has duble clicked on the object.
 Is Not used by BaseObject.
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.MouseMove(System.Windows.Forms.MouseEventArgs)">
	<summary>
 Is called when mouse has moved over the object.
 Is Not used by BaseObject.
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.MouseDown(System.Windows.Forms.MouseEventArgs)">
	<summary>
 Is called when a mouse button is down over the object.
 Is Not used by BaseObject.
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Plugins.BaseObject.MouseUp(System.Windows.Forms.MouseEventArgs)">
	<summary>
 Is called when a mouse button is released over the object.
 BaseObject uses for opening the menu.
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Plugins.DataFlowBase.TryConnect(System.Int32,System.Int32)">
	<summary>
 Connect a input to this output.
 </summary>
	<param name="obj1"></param>
	<param name="Index1"></param>
	<returns>True if successfully added.</returns>
</member><member name="M:Plugins.DataFlowBase.Disconnect">
	<summary>
 Disconnect all connections.
 </summary>
</member><member name="M:Plugins.DataFlowBase.IsEmpty">
	<summary>
 Returns true if nothing connected.
 </summary>
	<returns></returns>
</member><member name="M:Plugins.DataFlowBase.IsNotEmpty">
	<summary>
 Not IsEmpty
 </summary>
</member><member name="T:Plugins.HID">
	<summary>
 Human interface device
 </summary>
</member><member name="M:Plugins.Menu.Menu.Open(System.Int32,Plugins.Menu.Node)">
	<summary>
 Open a dropdown menu with the items.
 </summary>
	<param name="ObjectIndex">The object the menu will call MenuSlected to. -1 will add the object.</param>
	<param name="Item">The item for the menu to use.</param>
</member><member name="M:Plugins.Menu.Menu.MouseMove">
	<summary>
 Returns false if noting changed.
 </summary>
</member><member name="M:Plugins.Menu.Menu.AddNode(Plugins.Menu.Node,System.String[],System.String[])">
	<summary>
 Add a menu node to a node list.
 Usefull to add groups.
 </summary>
	<param name="Item">The item to add the node to.</param>
	<param name="Data">Name,Optional ClassName Or Width, Optional Width</param>
	<param name="Groups"></param>
	<remarks></remarks>
</member><member name="M:Plugins.Menu.Node.#ctor(Plugins.Menu.Result)">
	<summary>Is used when the menu sends the object the node.</summary>
	<param name="Result">What was the menus results?</param>
</member><member name="M:Plugins.Menu.Node.#ctor(System.String,System.String,System.Int32)">
	<summary>Create a node</summary>
	<param name="Name">The name that will display in the menu.</param>
	<param name="ClassName">The name of the class to create for adding objects.</param>
	<param name="Width">The first node in each group. Specifies the width of the menu.</param>
</member><member name="M:Plugins.Menu.Node.#ctor(System.String,System.Boolean,System.Int32)">
	<summary>Create a node</summary>
	<param name="Name">The name that will display in the menu.</param>
	<param name="IsGroup">Is this node going to have children?</param>
	<param name="Width">The first node in each group. Specifies the width of the menu.</param>
</member><member name="M:Plugins.Menu.Node.Sort">
	<summary>
 Sorts All children. even the childrens children+.
 </summary>
</member><member name="M:Plugins.MIDI_SimulatePedals.ReleaseNote(System.Int32)">
	<summary>
 Release note at ID
 </summary>
	<param name="ID"></param>
	<remarks></remarks>
</member>
</members>
</doc>